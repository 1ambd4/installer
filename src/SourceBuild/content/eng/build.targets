<Project>
  <UsingTask AssemblyFile="$(SdkArchiveDiffTasksAssembly)" TaskName="GetValidArchiveItems" />
  <UsingTask AssemblyFile="$(SdkArchiveDiffTasksAssembly)" TaskName="GetClosestOfficialSdk" />
  <UsingTask AssemblyFile="$(SdkArchiveDiffTasksAssembly)" TaskName="FindArchiveDiffs" />

  <Target Name="ReportSdkArchiveDiffs"
          AfterTargets="Build"
          DependsOnTargets="DetermineSourceBuiltSdkVersion"
          Condition="'$(ShortStack)' != 'true' AND '$(PortableBuild)' == 'true'" >
          <!-- ShortStack doesn't produce an SDK, and GetClosestOfficialSdk doesn't support finding non-portable SDKs -->

      <Message Text="Comparing built SDK against closest official build"
               Importance="High"/>

      <GetValidArchiveItems ArchiveItems="@(SdkTarballItem)"
                            ArchiveName="dotnet-sdk">
        <Output TaskParameter="ValidArchiveItems"
                ItemName="_BuiltSdkArchivePath"/>
      </GetValidArchiveItems>

      <!-- There should only be 1 SDK archive -->
      <Error Text="Multiple valid dotnet-sdk archives found."
             Condition="'@(_BuiltSdkArchivePath->Count())' != '1'" />

      <GetClosestOfficialSdk BuiltArchivePath="@(_BuiltSdkArchivePath)">
        <Output TaskParameter="ClosestOfficialArchivePath"
                PropertyName="_ClosestOfficialSdkPath" />
      </GetClosestOfficialSdk>

      <FindArchiveDiffs BaselineArchive="@(_BuiltSdkArchivePath)"
                        TestArchive="$(_ClosestOfficialSdkPath)">
        <Output TaskParameter="ContentDifferences"
                ItemName="_ContentDifferences" />
      </FindArchiveDiffs>

      <ItemGroup>
        <_changedFiles Include="@(_ContentDifferences)" Condition="'%(_contentDifferences.Kind)' != 'Unchanged'" />
      </ItemGroup>

      <Message Text="Difference in sdk archive: %(_changedFiles.Kind): %(_changedFiles.Identity)"
               Importance="High"
               Condition="'@(_changedFiles->Count())' != '0'"/>
      <Message Text="No differences in sdk archive file contents"
               Importance="High"
               Condition="'@(_changedFiles->Count())' == '0'" />

      <Delete Files="$(_ClosestOfficialSdkPath)"
              Condition="'$(_ClosestOfficialSdkPath)' == ''"/>

  </Target>

</Project>
